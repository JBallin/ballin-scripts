#!/bin/bash

# TODO:
  # function that takes a filename and reads the gist using 'gist -r'
    # function to display names of the files?
  # INIT:
    # log in to gist
    # create gist and save id in config
  # gu should upload ballin_config too - that way have a backup of ur config
  # give error if id/sn null or if gist -r $id gives error?
    # need to make sure that the gist with that $id actually exists...tell them to run init?
    # or maybe just run it for them now?

id=$(ballin_config get gu.id)
url="https://gist.github.com/$id"

if [ ! -z $1 ]; then
  if [ $1 == open ]; then
    echo $url
    open $url
  elif [ $1 == read ]; then
    if [ ! -z $2 ]; then
      gist -r $id $2
    else
      echo "'read' needs a filename: bash_profile, zshrc, bashrc, bash_completions, brew_list, brew_leaves, brew_cask, brew_services, npm_global, gitignore_global, gitconfig, apm, atomconfig, atom_keymap, atom_snippets, atom_styles, atom_init, vs_settings, vs_extensions, vimrc, nanorc"
    fi
  elif [ $1 == help ]; then
    ballin
  fi
else
  gistUpdater() {
    u() {
      local file_name=$1
      local input=$2
      gist_is_changed() {
        local changed
        if [ -s $file_name ]; then
          gist -r $id $file_name > raw_gist
          # add newline to end of $file_name if not already present, to match gist format
          sed -i -e '$a\' $file_name
          if cmp --quiet $file_name raw_gist; then
            echo "✔ $file_name"
            changed=1
          else
            echo "✙ $file_name"
            changed=0
          fi
          rm raw_gist
        else
          changed=1
        fi
        return $changed
      }

      $input > $file_name
      if gist_is_changed; then gist -u $id $file_name > /dev/null; fi
      rm $file_name
    }

    # only prints non-comments TODO: add option to init to toggle whether or not want comments included
    catWithoutCommentsAndBlankLines() {
      local file_name=$1
      sed -e '/^[[:blank:]]*#/d;s/#.*//; /^$/d' $file_name
    }

  	(
      cd $HOME

      ### BASH
  	  u 'bash_profile' 'cat .bash_profile'
      u 'bash_completions' 'ls /usr/local/etc/bash_completion.d'

      ### BREW
      if [ -x "$(command -v brew)" ]; then
    	  u 'brew_list' 'brew list'
    	  u 'brew_leaves' 'brew leaves'
    	  u 'brew_cask' 'brew cask list'
        u 'brew_services' 'brew services list'
      fi

      ### NPM
      if [ -x "$(command -v npm)" ]; then
        u 'npm_global' 'ls /usr/local/lib/node_modules'
      fi

      ### GIT
  		u 'gitignore_global' 'cat .gitignore_global'
  		u 'gitconfig' 'cat .gitconfig'

      ### ATOM
      if [ -x "$(command -v atom)" ]; then
        u 'apm' 'apm list --installed --no-color'
        u 'atom_config' 'cat .atom/config.cson'
        u 'atom_keymap' 'catWithoutCommentsAndBlankLines .atom/keymap.cson'
        u 'atom_snippets' 'catWithoutCommentsAndBlankLines .atom/snippets.cson'
        # TODO: catWithout... not checking for CSS comments, just hashes. Need to updated func to check for those.
    		u 'atom_styles' 'catWithoutCommentsAndBlankLines .atom/styles.less'
    		u 'atom_init' 'catWithoutCommentsAndBlankLines .atom/init.coffee'
      fi
  	)
  }
  gistUpdater
fi
